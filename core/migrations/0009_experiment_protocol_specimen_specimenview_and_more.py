# Generated by Django 4.2.8 on 2024-07-31 11:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        ("authentikate", "0002_alter_user_unique_together_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0008_alter_ontology_user"),
    ]

    operations = [
        migrations.CreateModel(
            name="Experiment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the experiment", max_length=1000
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="The description of the experiment",
                        max_length=1000,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Protocol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the protocol", max_length=1000
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="The description of the protocol",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "experiment",
                    models.ForeignKey(
                        help_text="The experiment that this protocol was designed for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="protocols",
                        to="core.experiment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Specimen",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        help_text="The associated entity",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="specimens",
                        to="core.entity",
                    ),
                ),
                (
                    "protocol",
                    models.ForeignKey(
                        blank=True,
                        help_text="The protocol that this specimen was subjected to",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="specimens",
                        to="core.protocol",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SpecimenView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "z_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "z_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "x_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "x_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "y_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "y_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "t_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "t_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "c_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "c_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "is_global",
                    models.BooleanField(
                        default=False, help_text="Whether the view is global or not"
                    ),
                ),
                (
                    "t",
                    models.IntegerField(
                        help_text="The relative time of the view in the lifespan of the specimen. Think DIV1"
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.viewcollection",
                    ),
                ),
                (
                    "image",
                    simple_history.models.HistoricForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.image"
                    ),
                ),
                (
                    "specimen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="views",
                        to="core.specimen",
                    ),
                ),
            ],
            options={
                "default_related_name": "specimen_views",
            },
        ),
        migrations.CreateModel(
            name="ProtocolStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "t",
                    models.IntegerField(
                        help_text="The relative time of the step according to the lifetime of each sample?"
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="The name of the step", max_length=1000),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="The description of the step",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "protocol",
                    models.ForeignKey(
                        help_text="The protocol that this step is being used in",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="core.protocol",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalSpecimenView",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "assignation_id",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "z_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "z_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "x_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "x_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "y_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "y_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "t_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "t_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "c_min",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "c_max",
                    models.IntegerField(
                        blank=True, help_text="The index of the channel", null=True
                    ),
                ),
                (
                    "is_global",
                    models.BooleanField(
                        default=False, help_text="Whether the view is global or not"
                    ),
                ),
                (
                    "t",
                    models.IntegerField(
                        help_text="The relative time of the view in the lifespan of the specimen. Think DIV1"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentikate.app",
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.viewcollection",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="provenance",
                        to="core.specimenview",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "image",
                    simple_history.models.HistoricForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.image",
                    ),
                ),
                (
                    "specimen",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.specimen",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical specimen view",
                "verbose_name_plural": "historical specimen views",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSpecimen",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "assignation_id",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentikate.app",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The associated entity",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.entity",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="provenance",
                        to="core.specimen",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "protocol",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The protocol that this specimen was subjected to",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.protocol",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical specimen",
                "verbose_name_plural": "historical specimens",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalProtocolStep",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "assignation_id",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "t",
                    models.IntegerField(
                        help_text="The relative time of the step according to the lifetime of each sample?"
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="The name of the step", max_length=1000),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="The description of the step",
                        max_length=1000,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentikate.app",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="provenance",
                        to="core.protocolstep",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "protocol",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The protocol that this step is being used in",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.protocol",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical protocol step",
                "verbose_name_plural": "historical protocol steps",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalProtocol",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "assignation_id",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the protocol", max_length=1000
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="The description of the protocol",
                        max_length=1000,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentikate.app",
                    ),
                ),
                (
                    "experiment",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="The experiment that this protocol was designed for",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.experiment",
                    ),
                ),
                (
                    "history_relation",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="provenance",
                        to="core.protocol",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical protocol",
                "verbose_name_plural": "historical protocols",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name="entitygroup",
            name="experiment",
            field=models.ForeignKey(
                blank=True,
                help_text="The experiment this entity group belongs to (if its part of an experiment)",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="entity_groups",
                to="core.experiment",
            ),
        ),
        migrations.AddField(
            model_name="historicalentitygroup",
            name="experiment",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="The experiment this entity group belongs to (if its part of an experiment)",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="core.experiment",
            ),
        ),
    ]
