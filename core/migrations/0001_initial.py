# Generated by Django 5.2 on 2025-05-15 15:44

import core.enums
import core.fields
import core.models
import django.db.models.deletion
import django_choices_field.fields
import simple_history.models
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentikate', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='S3Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', core.fields.S3Field(blank=True, help_text='The store of the image', max_length=500, null=True, unique=True)),
                ('key', models.CharField(max_length=1000)),
                ('bucket', models.CharField(max_length=1000)),
                ('populated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=1000, unique=True)),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('model', models.CharField(blank=True, max_length=1000, null=True)),
                ('bit_depth', models.IntegerField(blank=True, null=True)),
                ('sensor_size_x', models.IntegerField(blank=True, null=True)),
                ('sensor_size_y', models.IntegerField(blank=True, null=True)),
                ('pixel_size_x', models.FloatField(blank=True, null=True)),
                ('pixel_size_y', models.FloatField(blank=True, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the experiment', max_length=1000)),
                ('description', models.CharField(help_text='The description of the experiment', max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('manufacturer', models.CharField(blank=True, max_length=1000, null=True)),
                ('model', models.CharField(blank=True, max_length=1000, null=True)),
                ('serial_number', models.CharField(max_length=1000, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=1000, unique=True)),
                ('name', models.CharField(max_length=1000)),
                ('magnification', models.FloatField(blank=True, null=True)),
                ('na', models.FloatField(blank=True, null=True)),
                ('immersion', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ROIGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the ROI group', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='ViewCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the view', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='BigFileStore',
            fields=[
                ('s3store_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.s3store')),
                ('file_name', models.CharField(default='', help_text='The name of the file', max_length=1000)),
                ('mime_type', models.CharField(default='', help_text='The mimetype of the file', max_length=1000)),
            ],
            bases=('core.s3store',),
        ),
        migrations.CreateModel(
            name='MediaStore',
            fields=[
                ('s3store_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.s3store')),
            ],
            bases=('core.s3store',),
        ),
        migrations.CreateModel(
            name='MeshStore',
            fields=[
                ('s3store_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.s3store')),
            ],
            bases=('core.s3store',),
        ),
        migrations.CreateModel(
            name='ParquetStore',
            fields=[
                ('s3store_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.s3store')),
            ],
            bases=('core.s3store',),
        ),
        migrations.CreateModel(
            name='ZarrStore',
            fields=[
                ('s3store_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.s3store')),
                ('shape', models.JSONField(blank=True, null=True)),
                ('chunks', models.JSONField(blank=True, null=True)),
                ('dtype', models.CharField(blank=True, max_length=1000, null=True)),
                ('version', models.CharField(default='2', max_length=1000)),
            ],
            bases=('core.s3store',),
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the channel', max_length=1000)),
                ('emission_wavelength', models.FloatField(blank=True, help_text='The emmission wavelength of the fluorophore in nm', null=True)),
                ('excitation_wavelength', models.FloatField(blank=True, help_text='The excitation wavelength of the fluorophore in nm', null=True)),
                ('acquisition_mode', models.CharField(blank=True, help_text='The acquisition mode of the channel', max_length=1000, null=True)),
                ('color', models.CharField(blank=True, help_text='The default color for the channel ', max_length=1000, null=True)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('name', 'emission_wavelength', 'excitation_wavelength'), name='Only one channel per name, emmission_wavelength and excitation_wavelength')],
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The time the dataset was created')),
                ('name', models.CharField(help_text='The name of the dataset', max_length=200)),
                ('description', models.CharField(blank=True, help_text='The description of the dataset', max_length=1000, null=True)),
                ('is_default', models.BooleanField(default=False, help_text='Whether the dataset is the current default dataset for the user')),
                ('creator', models.ForeignKey(help_text='The user that created the dataset', on_delete=django.db.models.deletion.CASCADE, related_name='created_datasets', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.dataset')),
                ('pinned_by', models.ManyToManyField(blank=True, help_text='The users that have pinned the dataset', related_name='pinned_datasets', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Blurhash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hash', models.CharField(help_text='The blurhash of the image', max_length=1000)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.dataset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Era',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the stage', max_length=1000)),
                ('kind', models.CharField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The time the stages was created')),
                ('begin', models.DateTimeField(blank=True, help_text='The time the era started', null=True)),
                ('end', models.DateTimeField(blank=True, help_text='The time the era ended', null=True)),
                ('creator', models.ForeignKey(blank=True, help_text='The user that created the stage', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pinned_by', models.ManyToManyField(blank=True, help_text='The users that have pinned the era', related_name='pinned_eras', to=settings.AUTH_USER_MODEL)),
                ('instrument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.instrument')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='The name of the file', max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='core.dataset')),
                ('origins', models.ManyToManyField(related_name='derived', to='core.file')),
                ('store', models.ForeignKey(blank=True, help_text='The store of the file', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.bigfilestore')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalCamera',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('serial_number', models.CharField(db_index=True, max_length=1000)),
                ('name', models.CharField(db_index=True, max_length=1000)),
                ('model', models.CharField(blank=True, max_length=1000, null=True)),
                ('bit_depth', models.IntegerField(blank=True, null=True)),
                ('sensor_size_x', models.IntegerField(blank=True, null=True)),
                ('sensor_size_y', models.IntegerField(blank=True, null=True)),
                ('pixel_size_x', models.FloatField(blank=True, null=True)),
                ('pixel_size_y', models.FloatField(blank=True, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=1000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.camera')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical camera',
                'verbose_name_plural': 'historical cameras',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalChannel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(help_text='The name of the channel', max_length=1000)),
                ('emission_wavelength', models.FloatField(blank=True, help_text='The emmission wavelength of the fluorophore in nm', null=True)),
                ('excitation_wavelength', models.FloatField(blank=True, help_text='The excitation wavelength of the fluorophore in nm', null=True)),
                ('acquisition_mode', models.CharField(blank=True, help_text='The acquisition mode of the channel', max_length=1000, null=True)),
                ('color', models.CharField(blank=True, help_text='The default color for the channel ', max_length=1000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.channel')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical channel',
                'verbose_name_plural': 'historical channels',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDataset',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='The time the dataset was created')),
                ('name', models.CharField(help_text='The name of the dataset', max_length=200)),
                ('description', models.CharField(blank=True, help_text='The description of the dataset', max_length=1000, null=True)),
                ('is_default', models.BooleanField(default=False, help_text='Whether the dataset is the current default dataset for the user')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, help_text='The user that created the dataset', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.dataset')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.dataset')),
            ],
            options={
                'verbose_name': 'historical dataset',
                'verbose_name_plural': 'historical datasets',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExperiment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(help_text='The name of the experiment', max_length=1000)),
                ('description', models.CharField(help_text='The description of the experiment', max_length=1000, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.experiment')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical experiment',
                'verbose_name_plural': 'historical experiments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='The name of the image', max_length=1000)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('kind', django_choices_field.fields.TextChoicesField(choices=[('MASK', 'Mask (Value represent Labels)'), ('VOXEL', 'Voxel (Value represent Intensity)'), ('RGB', 'RGB (First three channel represent RGB)'), ('UNKNOWN', 'Unknown')], choices_enum=core.enums.ImageKind, default='UNKNOWN', help_text='The Representation can have vasrying kind, consult your API', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.dataset')),
                ('pinned_by', models.ManyToManyField(help_text='The users that have pinned the images', related_name='pinned_images', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('store', models.ForeignKey(blank=True, help_text='The store of the image', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.zarrstore')),
            ],
            options={
                'permissions': [('inspect_image', 'Can view image')],
            },
        ),
        migrations.CreateModel(
            name='HistoricalBlurhash',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('hash', models.CharField(help_text='The blurhash of the image', max_length=1000)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.dataset')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.blurhash')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
            ],
            options={
                'verbose_name': 'historical blurhash',
                'verbose_name_plural': 'historical blurhashs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistogramView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('histogram', models.JSONField(default=list, help_text='The histogram of the image (y values)')),
                ('bins', models.JSONField(default=list, help_text='The bin indices of the histogram (x values)')),
                ('min', models.FloatField(blank=True, help_text='The minimum pixel value of the histogram', null=True)),
                ('max', models.FloatField(blank=True, help_text='The maximum pixel value of the histogram', null=True)),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'histogram_views',
            },
        ),
        migrations.CreateModel(
            name='FileView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('series_identifier', models.CharField(blank=True, help_text='The series identifier of the file', max_length=1000, null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='core.file')),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'file_views',
            },
        ),
        migrations.CreateModel(
            name='DerivedView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('operation', models.CharField(help_text='The operation that was used to create the image', max_length=1000, null=True)),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('origin_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='derived_from_views', to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'derived_views',
            },
        ),
        migrations.CreateModel(
            name='ChannelView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='core.channel')),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'channel_views',
            },
        ),
        migrations.AddField(
            model_name='blurhash',
            name='image',
            field=simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blurhashes', to='core.image'),
        ),
        migrations.CreateModel(
            name='HistoricalInstrument',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(max_length=1000)),
                ('manufacturer', models.CharField(blank=True, max_length=1000, null=True)),
                ('model', models.CharField(blank=True, max_length=1000, null=True)),
                ('serial_number', models.CharField(db_index=True, max_length=1000)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.instrument')),
            ],
            options={
                'verbose_name': 'historical instrument',
                'verbose_name_plural': 'historical instruments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEra',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(help_text='The name of the stage', max_length=1000)),
                ('kind', models.CharField(max_length=1000)),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='The time the stages was created')),
                ('begin', models.DateTimeField(blank=True, help_text='The time the era started', null=True)),
                ('end', models.DateTimeField(blank=True, help_text='The time the era ended', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, help_text='The user that created the stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.era')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instrument', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.instrument')),
            ],
            options={
                'verbose_name': 'historical era',
                'verbose_name_plural': 'historical eras',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LabelView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('label', models.CharField(help_text='The label of the entity class', max_length=1000, null=True)),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'label_views',
            },
        ),
        migrations.CreateModel(
            name='MultiWellPlate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='A name for the multiwell plate', max_length=1000, null=True)),
                ('description', models.CharField(blank=True, help_text='A description for the multiwell plate', max_length=1000, null=True)),
                ('rows', models.IntegerField(blank=True, help_text='The number of rows in the multiwell plate', null=True)),
                ('columns', models.IntegerField(blank=True, help_text='The number of columns in the multiwell plate', null=True)),
                ('pinned_by', models.ManyToManyField(blank=True, help_text='The users that have pinned the stage', related_name='pinned_multiwellplates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalMultiWellPlate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(blank=True, help_text='A name for the multiwell plate', max_length=1000, null=True)),
                ('description', models.CharField(blank=True, help_text='A description for the multiwell plate', max_length=1000, null=True)),
                ('rows', models.IntegerField(blank=True, help_text='The number of rows in the multiwell plate', null=True)),
                ('columns', models.IntegerField(blank=True, help_text='The number of columns in the multiwell plate', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.multiwellplate')),
            ],
            options={
                'verbose_name': 'historical multi well plate',
                'verbose_name_plural': 'historical multi well plates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalObjective',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('serial_number', models.CharField(db_index=True, max_length=1000)),
                ('name', models.CharField(max_length=1000)),
                ('magnification', models.FloatField(blank=True, null=True)),
                ('na', models.FloatField(blank=True, null=True)),
                ('immersion', models.CharField(blank=True, max_length=1000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.objective')),
            ],
            options={
                'verbose_name': 'historical objective',
                'verbose_name_plural': 'historical objectives',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='OpticsView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('camera', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='views', to='core.camera')),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='core.instrument')),
                ('objective', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='views', to='core.objective')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'optics_views',
            },
        ),
        migrations.CreateModel(
            name='PixelView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('meaning', models.CharField(blank=True, help_text='The meaning of the pixel view', max_length=1000, null=True)),
                ('is_instance_mask', models.BooleanField(default=False, help_text='Whether the pixel view is an instance mask')),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'pixel_views',
            },
        ),
        migrations.CreateModel(
            name='PixelLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now=True, help_text='The time the ROI was created')),
                ('entity', models.CharField(blank=True, max_length=1000, null=True)),
                ('label', models.CharField(blank=True, help_text='The label of the ROI (for UI)', max_length=1000, null=True)),
                ('pinned_by', models.ManyToManyField(blank=True, help_text='The users that pinned this ROI', related_name='pinned_labels', to=settings.AUTH_USER_MODEL)),
                ('view', models.ForeignKey(blank=True, help_text='The Representation this ROI was original used to create (drawn on)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='labels', to='core.pixelview')),
            ],
        ),
        migrations.CreateModel(
            name='RGBRenderContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, help_text='The description of the view', max_length=8000, null=True)),
                ('name', models.CharField(help_text='The name of the view', max_length=1000)),
                ('blending', django_choices_field.fields.TextChoicesField(choices=[('additive', 'Additive'), ('multiplicative', 'Multiplicative')], choices_enum=core.enums.BlendingChoices, default='additive', help_text='The blending of the channel', max_length=14)),
                ('z', models.IntegerField(default=0, help_text='The index of the z (if not in 3D mode)')),
                ('t', models.IntegerField(default=0, help_text='The index of the t (if not in hypermode)')),
                ('c', models.IntegerField(default=0, help_text='The index of the c (if not in multi-channel mode)')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rgb_contexts', to='core.image')),
                ('pinned_by', models.ManyToManyField(blank=True, help_text='The users that have pinned the era', related_name='pinned_rgbcontexts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RenderTree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='The name of the tree', max_length=1000)),
                ('tree', models.JSONField()),
                ('linked_contexts', models.ManyToManyField(related_name='linked_trees', to='core.rgbrendercontext')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalRGBRenderContext',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.CharField(blank=True, help_text='The description of the view', max_length=8000, null=True)),
                ('name', models.CharField(help_text='The name of the view', max_length=1000)),
                ('blending', django_choices_field.fields.TextChoicesField(choices=[('additive', 'Additive'), ('multiplicative', 'Multiplicative')], choices_enum=core.enums.BlendingChoices, default='additive', help_text='The blending of the channel', max_length=14)),
                ('z', models.IntegerField(default=0, help_text='The index of the z (if not in 3D mode)')),
                ('t', models.IntegerField(default=0, help_text='The index of the t (if not in hypermode)')),
                ('c', models.IntegerField(default=0, help_text='The index of the c (if not in multi-channel mode)')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.rgbrendercontext')),
            ],
            options={
                'verbose_name': 'historical rgb render context',
                'verbose_name_plural': 'historical rgb render contexts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='RGBView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('contrast_limit_min', models.FloatField(blank=True, help_text='The limits of the channel', null=True)),
                ('contrast_limit_max', models.FloatField(blank=True, help_text='The limits of the channel', null=True)),
                ('gamma', models.FloatField(blank=True, help_text='The gamma of the channel', null=True)),
                ('rescale', models.BooleanField(default=False, help_text='Whether the channel should be rescaled')),
                ('active', models.BooleanField(default=True, help_text='Whether the viewis active')),
                ('color_map', django_choices_field.fields.TextChoicesField(choices=[('viridis', 'Viridis'), ('plasma', 'Plasma'), ('inferno', 'Inferno'), ('magma', 'Magma'), ('red', 'Red'), ('green', 'Green'), ('blue', 'Blue'), ('cyan', 'Cyan'), ('magenta', 'Magenta'), ('yellow', 'Yellow'), ('black', 'Black'), ('white', 'White'), ('orange', 'Orange'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('rainbow', 'Rainbow'), ('spectral', 'Spectral'), ('cool', 'Cool'), ('warm', 'Warm'), ('intensity', 'Intensity')], choices_enum=core.enums.ColorMapChoices, default='viridis', help_text='The applying color map of the channel', max_length=9)),
                ('base_color', models.JSONField(default=core.models.create_default_color, help_text='The base color of the channel (if using a mapped scaler) (RGBA)')),
                ('contexts', models.ManyToManyField(related_name='views', to='core.rgbrendercontext')),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'rgb_views',
            },
        ),
        migrations.CreateModel(
            name='ROI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.CharField(blank=True, max_length=1000, null=True)),
                ('vectors', models.JSONField(default=list, help_text='A list of the ROI Vectors (specific for each type)', max_length=3000)),
                ('kind', django_choices_field.fields.TextChoicesField(choices=[('ellipse', 'Ellipse'), ('polygon', 'POLYGON'), ('line', 'Line'), ('rectangle', 'Rectangle (XY)'), ('spectral_rectangle', 'Spectral Rectangle (XYC)'), ('temporal_rectangle', 'Temporal Rectangle (XYT)'), ('cube', 'Cube (XYZ)'), ('spectral_cube', 'Spectral Cube (XYZC)'), ('temporal_cube', 'Temporal Cube (XYZT)'), ('hypercube', 'Hypercube (XYZT)'), ('spectral_hypercube', 'Spectral Hypercube (XYZTC)'), ('path', 'Path'), ('unknown', 'Unknown'), ('frame', 'Frame'), ('slice', 'Slice'), ('point', 'Point')], choices_enum=core.enums.RoiKindChoices, default='path', help_text='The Roi can have vasrying kind, consult your API', max_length=18)),
                ('color', models.CharField(blank=True, help_text='The color of the ROI (for UI)', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, help_text='The time the ROI was created')),
                ('label', models.CharField(blank=True, help_text='The label of the ROI (for UI)', max_length=1000, null=True)),
                ('creator', models.ForeignKey(help_text='The user that created the ROI', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('image', models.ForeignKey(blank=True, help_text='The Representation this ROI was original used to create (drawn on)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rois', to='core.image')),
                ('pinned_by', models.ManyToManyField(blank=True, help_text='The users that pinned this ROI', related_name='pinned_rois', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, help_text='The group this ROI belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rois', to='core.roigroup')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalROIGroup',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(help_text='The name of the ROI group', max_length=1000)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.roigroup')),
            ],
            options={
                'verbose_name': 'historical roi group',
                'verbose_name_plural': 'historical roi groups',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalROI',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('entity', models.CharField(blank=True, max_length=1000, null=True)),
                ('vectors', models.JSONField(default=list, help_text='A list of the ROI Vectors (specific for each type)', max_length=3000)),
                ('kind', django_choices_field.fields.TextChoicesField(choices=[('ellipse', 'Ellipse'), ('polygon', 'POLYGON'), ('line', 'Line'), ('rectangle', 'Rectangle (XY)'), ('spectral_rectangle', 'Spectral Rectangle (XYC)'), ('temporal_rectangle', 'Temporal Rectangle (XYT)'), ('cube', 'Cube (XYZ)'), ('spectral_cube', 'Spectral Cube (XYZC)'), ('temporal_cube', 'Temporal Cube (XYZT)'), ('hypercube', 'Hypercube (XYZT)'), ('spectral_hypercube', 'Spectral Hypercube (XYZTC)'), ('path', 'Path'), ('unknown', 'Unknown'), ('frame', 'Frame'), ('slice', 'Slice'), ('point', 'Point')], choices_enum=core.enums.RoiKindChoices, default='path', help_text='The Roi can have vasrying kind, consult your API', max_length=18)),
                ('color', models.CharField(blank=True, help_text='The color of the ROI (for UI)', max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='The time the ROI was created')),
                ('label', models.CharField(blank=True, help_text='The label of the ROI (for UI)', max_length=1000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, help_text='The user that created the ROI', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', models.ForeignKey(blank=True, db_constraint=False, help_text='The Representation this ROI was original used to create (drawn on)', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.roi')),
                ('group', models.ForeignKey(blank=True, db_constraint=False, help_text='The group this ROI belongs to', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.roigroup')),
            ],
            options={
                'verbose_name': 'historical roi',
                'verbose_name_plural': 'historical rois',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ROIView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('roi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='core.roi')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'roi_views',
            },
        ),
        migrations.CreateModel(
            name='ScaleView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('scale_x', models.FloatField(help_text='The scale in x direction')),
                ('scale_y', models.FloatField(help_text='The scale in y direction')),
                ('scale_z', models.FloatField(help_text='The scale in z direction')),
                ('scale_t', models.FloatField(help_text='The scale in t direction')),
                ('scale_c', models.FloatField(help_text='The scale in c direction')),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='derived_scale_views', to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'scale_views',
            },
        ),
        migrations.CreateModel(
            name='Snapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(default='', help_text='The name of the snapshot', max_length=1000)),
                ('context', models.ForeignKey(blank=True, help_text='The context of the snapshot', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='snapshots', to='core.rgbrendercontext')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.dataset')),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='core.image')),
                ('store', models.ForeignKey(blank=True, help_text='The store of the file', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.mediastore')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the stage', max_length=1000)),
                ('kind', models.CharField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The time the stages was created')),
                ('creator', models.ForeignKey(blank=True, help_text='The user that created the stage', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('instrument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.instrument')),
                ('pinned_by', models.ManyToManyField(blank=True, help_text='The users that have pinned the stage', related_name='pinned_stages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalStage',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(help_text='The name of the stage', max_length=1000)),
                ('kind', models.CharField(max_length=1000)),
                ('created_at', models.DateTimeField(blank=True, editable=False, help_text='The time the stages was created')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, help_text='The user that created the stage', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('instrument', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.instrument')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.stage')),
            ],
            options={
                'verbose_name': 'historical stage',
                'verbose_name_plural': 'historical stages',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='AffineTransformationView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('affine_matrix', models.JSONField()),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affine_views', to='core.stage')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'affine_transformation_views',
            },
        ),
        migrations.CreateModel(
            name='StructureView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('structure', models.CharField(blank=True, help_text='The entity that this view is for', max_length=1000, null=True)),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'structure_views',
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='The name of the image', max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='core.dataset')),
                ('origins', models.ManyToManyField(related_name='derived', to='core.table')),
                ('store', models.ForeignKey(blank=True, help_text='The store of the table', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.parquetstore')),
            ],
        ),
        migrations.CreateModel(
            name='LabelAccessor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keys', models.JSONField(help_text='The key of the column', max_length=1000)),
                ('min_index', models.IntegerField(blank=True, help_text='The index of the row where this view starts (null if all rows)', null=True)),
                ('max_index', models.IntegerField(blank=True, help_text='The index of the row where this view ends (null if all rows)', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('pixel_view', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='label_accessors', to='core.pixelview')),
                ('table', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.table')),
            ],
            options={
                'default_related_name': 'label_accessors',
            },
        ),
        migrations.CreateModel(
            name='ImageAccessor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keys', models.JSONField(help_text='The key of the column', max_length=1000)),
                ('min_index', models.IntegerField(blank=True, help_text='The index of the row where this view starts (null if all rows)', null=True)),
                ('max_index', models.IntegerField(blank=True, help_text='The index of the row where this view ends (null if all rows)', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('table', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.table')),
            ],
            options={
                'default_related_name': 'image_accessors',
            },
        ),
        migrations.CreateModel(
            name='TableView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('series_identifier', models.CharField(blank=True, help_text='The series identifier of the file', max_length=1000, null=True)),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='core.table')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'table_views',
            },
        ),
        migrations.CreateModel(
            name='TimepointView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('ms_since_start', models.FloatField(blank=True, help_text='The time in ms since the start of the era', null=True)),
                ('index_since_start', models.IntegerField(blank=True, help_text='The index of the timepoint since the start of the era', null=True)),
                ('era', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='core.era')),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'timepoint_views',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.dataset')),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='core.image')),
                ('store', models.ForeignKey(blank=True, help_text='The store of the video', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='core.mediastore')),
                ('thumbnail', models.ForeignKey(blank=True, help_text='The store of the video', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thumbnails', to='core.mediastore')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalViewCollection',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(help_text='The name of the view', max_length=1000)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical view collection',
                'verbose_name_plural': 'historical view collections',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTimepointView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('ms_since_start', models.FloatField(blank=True, help_text='The time in ms since the start of the era', null=True)),
                ('index_since_start', models.IntegerField(blank=True, help_text='The index of the timepoint since the start of the era', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('era', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.era')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.timepointview')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical timepoint view',
                'verbose_name_plural': 'historical timepoint views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTableView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('series_identifier', models.CharField(blank=True, help_text='The series identifier of the file', max_length=1000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('table', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.table')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.tableview')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical table view',
                'verbose_name_plural': 'historical table views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStructureView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('structure', models.CharField(blank=True, help_text='The entity that this view is for', max_length=1000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.structureview')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical structure view',
                'verbose_name_plural': 'historical structure views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScaleView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('scale_x', models.FloatField(help_text='The scale in x direction')),
                ('scale_y', models.FloatField(help_text='The scale in y direction')),
                ('scale_z', models.FloatField(help_text='The scale in z direction')),
                ('scale_t', models.FloatField(help_text='The scale in t direction')),
                ('scale_c', models.FloatField(help_text='The scale in c direction')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.scaleview')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical scale view',
                'verbose_name_plural': 'historical scale views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalROIView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('roi', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.roi')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.roiview')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical roi view',
                'verbose_name_plural': 'historical roi views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRGBView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('contrast_limit_min', models.FloatField(blank=True, help_text='The limits of the channel', null=True)),
                ('contrast_limit_max', models.FloatField(blank=True, help_text='The limits of the channel', null=True)),
                ('gamma', models.FloatField(blank=True, help_text='The gamma of the channel', null=True)),
                ('rescale', models.BooleanField(default=False, help_text='Whether the channel should be rescaled')),
                ('active', models.BooleanField(default=True, help_text='Whether the viewis active')),
                ('color_map', django_choices_field.fields.TextChoicesField(choices=[('viridis', 'Viridis'), ('plasma', 'Plasma'), ('inferno', 'Inferno'), ('magma', 'Magma'), ('red', 'Red'), ('green', 'Green'), ('blue', 'Blue'), ('cyan', 'Cyan'), ('magenta', 'Magenta'), ('yellow', 'Yellow'), ('black', 'Black'), ('white', 'White'), ('orange', 'Orange'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('rainbow', 'Rainbow'), ('spectral', 'Spectral'), ('cool', 'Cool'), ('warm', 'Warm'), ('intensity', 'Intensity')], choices_enum=core.enums.ColorMapChoices, default='viridis', help_text='The applying color map of the channel', max_length=9)),
                ('base_color', models.JSONField(default=core.models.create_default_color, help_text='The base color of the channel (if using a mapped scaler) (RGBA)')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.rgbview')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical rgb view',
                'verbose_name_plural': 'historical rgb views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPixelView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('meaning', models.CharField(blank=True, help_text='The meaning of the pixel view', max_length=1000, null=True)),
                ('is_instance_mask', models.BooleanField(default=False, help_text='Whether the pixel view is an instance mask')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.pixelview')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical pixel view',
                'verbose_name_plural': 'historical pixel views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOpticsView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('camera', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.camera')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('instrument', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.instrument')),
                ('objective', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.objective')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.opticsview')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical optics view',
                'verbose_name_plural': 'historical optics views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLabelView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('label', models.CharField(help_text='The label of the entity class', max_length=1000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.labelview')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical label view',
                'verbose_name_plural': 'historical label views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHistogramView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('histogram', models.JSONField(default=list, help_text='The histogram of the image (y values)')),
                ('bins', models.JSONField(default=list, help_text='The bin indices of the histogram (x values)')),
                ('min', models.FloatField(blank=True, help_text='The minimum pixel value of the histogram', null=True)),
                ('max', models.FloatField(blank=True, help_text='The maximum pixel value of the histogram', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.histogramview')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical histogram view',
                'verbose_name_plural': 'historical histogram views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFileView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('series_identifier', models.CharField(blank=True, help_text='The series identifier of the file', max_length=1000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('file', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.file')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.fileview')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical file view',
                'verbose_name_plural': 'historical file views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDerivedView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('operation', models.CharField(help_text='The operation that was used to create the image', max_length=1000, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.derivedview')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('origin_image', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical derived view',
                'verbose_name_plural': 'historical derived views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalChannelView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('channel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.channel')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.channelview')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical channel view',
                'verbose_name_plural': 'historical channel views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAffineTransformationView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('affine_matrix', models.JSONField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.affinetransformationview')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('stage', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.stage')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
            ],
            options={
                'verbose_name': 'historical affine transformation view',
                'verbose_name_plural': 'historical affine transformation views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ContinousScanView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('direction', django_choices_field.fields.TextChoicesField(choices=[('row_column_slice', 'Row -> Column -> Slice'), ('column_row_slice', 'Column -> Row -> Slice'), ('slice_row_column', 'Slice -> Row -> Column'), ('row_column_slice_snake', 'Row -> Column -> Slice (Snake)'), ('column_row_slice_snake', 'Column -> Row -> Slice (Snake)'), ('slice_row_column_snake', 'Slice -> Row -> Column (Snake)')], choices_enum=core.enums.ContinousScanDirection, help_text='The direction of the scan', max_length=22)),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'continousscan_views',
            },
        ),
        migrations.CreateModel(
            name='AlphaView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
                ('is_alpha_for', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attached_alpha_views', to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'alpha_views',
            },
        ),
        migrations.CreateModel(
            name='AcquisitionView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('description', models.CharField(help_text='A cleartext description of the image acquisition', max_length=8000, null=True)),
                ('acquired_at', models.DateTimeField(auto_now_add=True, help_text='The time the image was acquired')),
                ('entity_id', models.CharField(blank=True, help_text='The entity that this view is for', max_length=1000, null=True)),
                ('operator', models.ForeignKey(blank=True, help_text='The user that created the image', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
            ],
            options={
                'default_related_name': 'acquisition_views',
            },
        ),
        migrations.CreateModel(
            name='WellPositionView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('row', models.IntegerField(help_text='The row of the well')),
                ('column', models.IntegerField(help_text='The column of the well')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.viewcollection')),
                ('image', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('well', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='core.multiwellplate')),
            ],
            options={
                'default_related_name': 'wellposition_views',
            },
        ),
        migrations.CreateModel(
            name='HistoricalWellPositionView',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('z_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('z_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('x_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('y_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('t_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_min', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('c_max', models.IntegerField(blank=True, help_text='The index of the channel', null=True)),
                ('is_global', models.BooleanField(default=False, help_text='Whether the view is global or not')),
                ('row', models.IntegerField(help_text='The row of the well')),
                ('column', models.IntegerField(help_text='The column of the well')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('well', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.multiwellplate')),
                ('collection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.viewcollection')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.wellpositionview')),
            ],
            options={
                'verbose_name': 'historical well position view',
                'verbose_name_plural': 'historical well position views',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFile',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(default='', help_text='The name of the file', max_length=1000)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.dataset')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.file')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(blank=True, db_constraint=False, help_text='The store of the file', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.bigfilestore')),
            ],
            options={
                'verbose_name': 'historical file',
                'verbose_name_plural': 'historical files',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalVideo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.dataset')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.video')),
                ('store', models.ForeignKey(blank=True, db_constraint=False, help_text='The store of the video', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.mediastore')),
                ('thumbnail', models.ForeignKey(blank=True, db_constraint=False, help_text='The store of the video', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.mediastore')),
            ],
            options={
                'verbose_name': 'historical video',
                'verbose_name_plural': 'historical videos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSnapshot',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(default='', help_text='The name of the snapshot', max_length=1000)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.dataset')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('image', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.image')),
                ('context', models.ForeignKey(blank=True, db_constraint=False, help_text='The context of the snapshot', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.rgbrendercontext')),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.snapshot')),
                ('store', models.ForeignKey(blank=True, db_constraint=False, help_text='The store of the file', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.mediastore')),
            ],
            options={
                'verbose_name': 'historical snapshot',
                'verbose_name_plural': 'historical snapshots',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Mesh',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the mesh', max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pinned_by', models.ManyToManyField(help_text='The users that have pinned the images', related_name='pinned_meshes', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(blank=True, help_text='The store of the mesh', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.meshstore')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalTable',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(default='', help_text='The name of the image', max_length=1000)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.dataset')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.table')),
                ('store', models.ForeignKey(blank=True, db_constraint=False, help_text='The store of the table', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.parquetstore')),
            ],
            options={
                'verbose_name': 'historical table',
                'verbose_name_plural': 'historical tables',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalImage',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('assignation_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(default='', help_text='The name of the image', max_length=1000)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('kind', django_choices_field.fields.TextChoicesField(choices=[('MASK', 'Mask (Value represent Labels)'), ('VOXEL', 'Voxel (Value represent Intensity)'), ('RGB', 'RGB (First three channel represent RGB)'), ('UNKNOWN', 'Unknown')], choices_enum=core.enums.ImageKind, default='UNKNOWN', help_text='The Representation can have vasrying kind, consult your API', max_length=7)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentikate.client')),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.dataset')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provenance_entries', to='core.image')),
                ('store', models.ForeignKey(blank=True, db_constraint=False, help_text='The store of the image', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.zarrstore')),
            ],
            options={
                'verbose_name': 'historical image',
                'verbose_name_plural': 'historical images',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddConstraint(
            model_name='dataset',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('creator', 'is_default'), name='unique_default_per_creator'),
        ),
        migrations.AddConstraint(
            model_name='dataset',
            constraint=models.UniqueConstraint(fields=('parent', 'name'), name='only_one_dataset_per_parent_and_name'),
        ),
    ]
